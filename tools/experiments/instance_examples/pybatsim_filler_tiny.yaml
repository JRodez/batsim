# This instance should be executed from Batsim's root directory

# If needed, the working directory can be specified within this file
# working_directory: ~/proj/batsim

# The different variables can be defined here
variables:
  platform: {"name":"small", "filename":"platforms/small_platform.xml"} # A dictionary
  workload: {"name":"tiny", "filename":"workload_profiles/test_workload_profile.json"} # Another dictionary
  pybatsim_algo: fillerSched # A simple variable
  useless_list: ["just_an_example", "mmh..."] # A list
# Some variables are automatically added into this dictionary:
#   - working_directory
#   - output_directory

# If needed, the output directory can be specified within this file
output_directory: /tmp/pyfiller/tiny

# The commands
batsim_command: batsim -p ${platform["filename"]} -w ${workload["filename"]} -e ${output_directory}/out -s ${output_directory}/socket
sched_command: python2 schedulers/pybatsim/launcher.py ${pybatsim_algo} -s ${output_directory}/socket

# These commands will be executed before the instance, in this order
# One-line commands will be executed in a bash environment.
# Multi-line commands will be placed in a script of their own, from which
# variables can be accessed via environment variables.
commands_before_execution:
  - echo $(pwd) > ${output_directory}/.pwd
  - cp ${output_directory}/.pwd ${output_directory}/crap_file
  - |
    #!/usr/bin/python2
    import os
    fname = os.environ['output_directory'] + '/python_output'
    f = open(fname, 'w')
    f.write("Hello from python2!\n")
    f.close()

# These commands will be executed after the instance, in this order
commands_after_execution:
  - cat ${output_directory}/crap_file
  - |
    #!/bin/bash
    cat ${output_directory}/out_schedule.csv | cut -d',' -f6 | tail -n 1 > ${output_directory}/makespan

# An upper bound on the instance's execution time can be set if needed
timeout: 10
